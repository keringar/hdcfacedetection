<map id="bmtrans.h" name="bmtrans.h">
<area shape="rect" id="node1" title="Utilities for bit transposition (internal) (experimental!)" alt="" coords="3074,5,3154,32"/>
<area shape="rect" id="node2" href="$bmbmatrix_8h.html" title="basic bit&#45;matrix class and utilities" alt="" coords="3109,80,3204,107"/>
<area shape="rect" id="node3" href="$bmsparsevec_8h.html" title="Sparse constainer sparse_vector&lt;&gt; for integer types using bit&#45;transposition transform." alt="" coords="1557,155,1668,181"/>
<area shape="rect" id="node41" href="$bmstrsparsevec_8h.html" title="string sparse vector based on bit&#45;transposed matrix" alt="" coords="3876,229,4003,256"/>
<area shape="rect" id="node44" href="$bmserial_8h.html" title="Serialization / compression of bvector&lt;&gt;. Set theoretical operations on compressed BLOBs." alt="" coords="3030,155,3113,181"/>
<area shape="rect" id="node4" href="$bmsparsevec__algo_8h.html" title="Algorithms for bm::sparse_vector." alt="" coords="2315,229,2457,256"/>
<area shape="rect" id="node5" href="$inv__list_8cpp.html" title="Utility to compress test sets of inverted lists." alt="" coords="2138,304,2226,331"/>
<area shape="rect" id="node10" href="$svsample05_8cpp.html" title="Example: sparse_vector&lt;&gt; used for set 2 set remapping (theory of groups Image)" alt="" coords="1425,304,1542,331"/>
<area shape="rect" id="node11" href="$svsample06_8cpp.html" title="Example: sparse_vector&lt;&gt; scan search (non&#45;ordered set functionality)" alt="" coords="1566,304,1683,331"/>
<area shape="rect" id="node12" href="$svsample07_8cpp.html" title="Example: sparse_vector&lt;&gt; lower bound search." alt="" coords="1707,304,1825,331"/>
<area shape="rect" id="node13" href="$svsample07a_8cpp.html" title="Example: sparse_vector&lt;&gt; search." alt="" coords="1848,304,1972,331"/>
<area shape="rect" id="node14" href="$svsample09_8cpp.html" title="Example: Use of sparse vector mismatch search." alt="" coords="1997,304,2114,331"/>
<area shape="rect" id="node15" href="$svsample10_8cpp.html" title="Example: Succinct vector searches: GT, GE, LT, LE, RANGE[from..to]." alt="" coords="2391,304,2509,331"/>
<area shape="rect" id="node16" href="$xsample01_8cpp.html" title="Example: Example: memory consumption techniques." alt="" coords="3128,304,3239,331"/>
<area shape="rect" id="node17" href="$xsample03_8cpp.html" title="Example: SNP search in human genome." alt="" coords="2993,304,3104,331"/>
<area shape="rect" id="node19" href="$xsample06_8cpp.html" title="Example: Use of sparse vector for compressed DNA strings." alt="" coords="2533,304,2644,331"/>
<area shape="rect" id="node22" href="$bmsparsevec__compr_8h.html" title="Compressed sparse container rsc_sparse_vector&lt;&gt; for integer types." alt="" coords="838,229,993,256"/>
<area shape="rect" id="node23" href="$rscsample01_8cpp.html" title="Example: rsc_sparse_vector&lt;&gt; usage." alt="" coords="576,304,697,331"/>
<area shape="rect" id="node24" href="$rscsample02_8cpp.html" title="Example: rsc_sparse_vector&lt;&gt; selective and range de&#45;serialization." alt="" coords="999,304,1120,331"/>
<area shape="rect" id="node25" href="$rscsample03_8cpp.html" title="Example: bm::rsc_sparse_vector&lt;&gt;::const_iterator." alt="" coords="5,304,127,331"/>
<area shape="rect" id="node26" href="$rscsample04_8cpp.html" title="Example: bm::rsc_sparse_vector&lt;&gt; known NULL elements access." alt="" coords="151,304,272,331"/>
<area shape="rect" id="node27" href="$rscsample05_8cpp.html" title="Example: collaborative compression (XOR compression)" alt="" coords="1279,304,1400,331"/>
<area shape="rect" id="node28" href="$rscsample06_8cpp.html" title="Example: bm::rsc_sparse_vector&lt;&gt;::gather." alt="" coords="296,304,417,331"/>
<area shape="rect" id="node30" href="$xsample09_8cpp.html" title="Example: Use succinct vectors for histogram construction." alt="" coords="441,304,552,331"/>
<area shape="rect" id="node31" href="$bmsparsevec__serial_8h.html" title="Serialization for sparse_vector&lt;&gt;" alt="" coords="2634,229,2783,256"/>
<area shape="rect" id="node35" href="$svsample02_8cpp.html" title="Example: sparse_vector&lt;&gt; serialization." alt="" coords="2250,304,2367,331"/>
<area shape="rect" id="node36" href="$svsample08_8cpp.html" title="Example: sparse_vector&lt;&gt; selective de&#45;serialization (gather) and range deserialization." alt="" coords="2669,304,2786,331"/>
<area shape="rect" id="node37" href="$svsample01_8cpp.html" title="Example: sparse_vector&lt;&gt; container set values." alt="" coords="1602,229,1719,256"/>
<area shape="rect" id="node38" href="$svsample03_8cpp.html" title="Example: sparse_vector&lt;&gt; merge and fast extraction of content." alt="" coords="1743,229,1861,256"/>
<area shape="rect" id="node39" href="$svsample04_8cpp.html" title="Example: sparse_vector&lt;&gt; with NULL (unset) values." alt="" coords="1885,229,2002,256"/>
<area shape="rect" id="node40" href="$xsample02_8cpp.html" title="Example: sparse_vector&lt;&gt; used for counting sort / historgam construction." alt="" coords="2027,229,2137,256"/>
<area shape="rect" id="node6" href="$strsvsample02_8cpp.html" title="Example: str_sparse_vector&lt;&gt; insertion sort example." alt="" coords="3263,304,3395,331"/>
<area shape="rect" id="node7" href="$strsvsample02a_8cpp.html" title="Example: str_sparse_vector&lt;&gt; sort example." alt="" coords="3554,304,3693,331"/>
<area shape="rect" id="node8" href="$strsvsample06_8cpp.html" title="Example: Succinct container iterator for (substring), search, mismatch." alt="" coords="3717,304,3849,331"/>
<area shape="rect" id="node9" href="$strsvsample07_8cpp.html" title="Example: Succinct container for strings, bulk search using scanner pipeline." alt="" coords="3873,304,4005,331"/>
<area shape="rect" id="node18" href="$xsample05_8cpp.html" title="Example: Example on how to use bit&#45;transposed string sparse vector." alt="" coords="3419,304,3529,331"/>
<area shape="rect" id="node20" href="$xsample07_8cpp.html" title="Example: Use of bvector&lt;&gt; for k&#45;mer fingerprint K should be short, no minimizers here." alt="" coords="1144,304,1255,331"/>
<area shape="rect" id="node21" href="$xsample07a_8cpp.html" title="Example: Use of bvector&lt;&gt; for k&#45;mer fingerprint K should be short, no minimizers here (k &lt; 24)" alt="" coords="857,304,974,331"/>
<area shape="rect" id="node29" href="$xsample08_8cpp.html" title=" " alt="" coords="721,304,832,331"/>
<area shape="rect" id="node32" href="$bmsparsevec__parallel_8h.html" title="Parallel planner for operations with sparse vectors." alt="" coords="2811,304,2969,331"/>
<area shape="rect" id="node33" href="$strsvsample03_8cpp.html" title="Example: str_sparse_vector&lt;&gt; back insert iterator example." alt="" coords="4029,304,4161,331"/>
<area shape="rect" id="node34" href="$strsvsample05_8cpp.html" title="Example: str_sparse_vector&lt;&gt; gather deserialization example." alt="" coords="4185,304,4317,331"/>
<area shape="rect" id="node42" href="$strsvsample01_8cpp.html" title="Example: str_sparse_vector&lt;&gt; set values, optimize memory." alt="" coords="4497,304,4629,331"/>
<area shape="rect" id="node43" href="$strsvsample04_8cpp.html" title="Example: str_sparse_vector&lt;&gt; how to work with NULL values." alt="" coords="4341,304,4473,331"/>
<area shape="rect" id="node45" href="$bmsparsevec__util_8h.html" title=" " alt="" coords="3665,229,3800,256"/>
<area shape="rect" id="node46" href="$bvsetalgebra_8cpp.html" title="Example: algebra of sets operations." alt="" coords="3011,229,3132,256"/>
<area shape="rect" id="node47" href="$sample14_8cpp.html" title="Example: bvector&lt;&gt; set operations on serialized/compressed BLOBs." alt="" coords="3156,229,3259,256"/>
<area shape="rect" id="node48" href="$sample22_8cpp.html" title="Example: bvector&lt;&gt; &#45; ranges and intervals functions." alt="" coords="3283,229,3385,256"/>
<area shape="rect" id="node49" href="$sample4_8cpp.html" title="Example: bvector&lt;&gt; serialization/deserialization." alt="" coords="3410,229,3506,256"/>
<area shape="rect" id="node50" href="$xsample04_8cpp.html" title="Example: DNA substring search." alt="" coords="3531,229,3641,256"/>
</map>
